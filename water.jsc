@Java
method move(){
   while(!(isWater(AHEAD) && isWater(LEFT) && isFacing(WEST))){
      if(isWater(LEFT)){
         checkLeft();
      }
      if(isWater(RIGHT)){
         checkRight();
      } 
      if(isWater(AHEAD)){
         checkAhead();
         if (isFacing(EAST)){
            turn(RIGHT);
            hop();
            turn(RIGHT);
         }
         else if(isFacing(WEST)){
            turn(LEFT);
            hop();
            turn(LEFT);   
         }
      }    
      hop();
   }

}


method checkLeft(){
   if(isWater(LEFT)&&!isFlower(HERE)){
      hop(3);
      if(!isWater(LEFT)){
         plant();
         surround();
         hop();
         move();
      }
   }
}

method checkRight(){
   if(isWater(RIGHT)&&!isFlower(HERE)){
      turn(RIGHT);
      turn(RIGHT);
      hop();
      if(!isWater(RIGHT)){
         plant();
         surround();
         turn(RIGHT);
         turn(RIGHT);
         move();
      }
   }
}

method checkAhead(){
   if(isWater(AHEAD) && isFacing(EAST) && !isWater(LEFT)
   && !isWater(RIGHT)){
      turn(LEFT);
      hop();
         if(isClear(RIGHT)){
            turn(LEFT);
            surround();
            turn(LEFT);
            hop();
            turn(LEFT);
            move();
         }
         else{
         turn(LEFT);
         turn(LEFT);
         hop();
         turn(LEFT);
         }
   }
}

method surround(){
   turn(LEFT);
   plant();
   hop();
   plant();
   hop();
   plant();
   hop();
   plant();
   hop();
   plant();
   turn(LEFT);
   hop();
   plant();
   hop();
   plant();
   hop();
   plant();
   hop();
   plant();
   turn(LEFT);
   hop();
   plant();
   hop();
   plant();
   hop();
   plant();
   hop();
   plant();
   turn(LEFT);
   hop();
   plant();
   hop();
   plant();
   hop();
   plant();
   hop();
   plant();
}
@@
method main()
{
   Jeroo Joey = new Jeroo(500);
   
   Joey.move();
}
